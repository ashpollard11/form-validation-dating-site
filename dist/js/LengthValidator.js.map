{"version":3,"sources":["LengthValidator.js"],"names":["LengthValidator","selector","min","max","console","log","$field","value","length","errors","push","Validator"],"mappings":";;;;;;;;;;;;IAAMA,e;;;AACL,0BAAYC,QAAZ,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAAA;;AACd;AADc,gIACzBF,QADyB;;AAE/BG,UAAQC,GAAR,CAAY,kCAAZ;AACA,QAAKH,GAAL,GAAWA,GAAX,CAH+B,CAGf;AAChB,QAAKC,GAAL,GAAWA,GAAX,CAJ+B,CAIf;AAJe;AAK/B;;;;6BAEU;AACV;;AAEA,OAAI,KAAKG,MAAL,CAAYC,KAAZ,CAAkBC,MAAlB,GAA2B,KAAKN,GAApC,EAAyC;AACxC,SAAKO,MAAL,CAAYC,IAAZ,CAAiB,qCAAqC,KAAKR,GAA1C,GAAgD,aAAjE;AACA;AACD,OAAI,KAAKI,MAAL,CAAYC,KAAZ,CAAkBC,MAAlB,GAA2B,KAAKL,GAApC,EAAyC;AACxC,SAAKM,MAAL,CAAYC,IAAZ,CAAiB,uCAAuC,KAAKP,GAA5C,GAAkD,aAAnE;AACA;AAED;;;;EAlB4BQ,S","file":"LengthValidator.js","sourcesContent":["class LengthValidator extends Validator {\n\tconstructor(selector, min, max) {\n\t\tsuper(selector); //call constructor in validator()\n\t\tconsole.log('constructor from LengthValidator')\n\t\tthis.min = min; //take arguments and put them into properties of the class\n\t\tthis.max = max; //take arguments and put them into properties of the class\n\t}\n\n\tvalidate() {\n\t\tsuper.validate();\n\t\t\n\t\tif (this.$field.value.length < this.min) {\n\t\t\tthis.errors.push(\"Password must contain more than \" + this.min + \" characters\");\n\t\t}\n\t\tif (this.$field.value.length > this.max) {\n\t\t\tthis.errors.push(\"Password cannot contain more than \" + this.max + \" characters\");\n\t\t}\n\n\t}\n\n}"]}