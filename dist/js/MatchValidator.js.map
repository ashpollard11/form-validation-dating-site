{"version":3,"sources":["MatchValidator.js"],"names":["MatchValidator","selector","matchingSelector","console","log","value","$field","errors","push","NumberRangeValidator"],"mappings":";;;;;;;;;;;;IAAMA,c;;;AACL,yBAAYC,QAAZ,EAAsBC,gBAAtB,EAAwC;AAAA;;AACtB;AADsB,8HACjCD,QADiC;;AAEvCE,UAAQC,GAAR,CAAY,iCAAZ;AACA;AACA;AAJuC;AAKvC;;;;6BAEU;AACV;;AAEA,OAAIF,iBAAiBG,KAAjB,KAA2B,IAA3B,IAAmC,KAAKC,MAAL,CAAYD,KAAZ,KAAsBH,iBAAiBG,KAA9E,EAAqF;AACpF,SAAKE,MAAL,CAAYC,IAAZ,CAAiB,sBAAjB;AACA;AACD;;;;EAd2BC,oB","file":"MatchValidator.js","sourcesContent":["class MatchValidator extends NumberRangeValidator {\n\tconstructor(selector, matchingSelector) {\n\t\tsuper(selector); //call constructor in validator()\n\t\tconsole.log('constructor from MatchValidator')\n\t\t//we dont need this constructor. It doesnt do anything different from the \n\t\t//parent class constructor. It s's here for illustrative purposes.\n\t}\n\n\tvalidate() {\n\t\tsuper.validate();\n\t\t\n\t\tif (matchingSelector.value === true && this.$field.value !== matchingSelector.value) {\n\t\t\tthis.errors.push(\"Passwords must match\");\n\t\t}\n\t}\n}"]}